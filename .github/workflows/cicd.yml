name: croniter
on: [workflow_dispatch, push, pull_request]
jobs:
  build-py2:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["2.7"]
    steps:
    - uses: actions/checkout@v4
    - name: install dependencies && test on py27
      run: |
        set -ex
        sudo apt update && sudo apt install -y python2.7
        # install py 2 with eg: apt install python2.7
        mkdir venv2 && curl -sSL "https://github.com/pypa/get-virtualenv/blob/20.27.0/public/2.7/virtualenv.pyz?raw=true" > venv2/venv && python2.7 venv2/venv venv2
        venv2/bin/python2 -m pip install -r ./requirements/test.txt tox-direct
        venv2/bin/tox --direct -e "py${pyver//\.}-{std,coverage}"

  build-py3:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: install dependencies && test on py3
      run: |
        set -ex
        python -m pip install --upgrade --use-pep517 pip
        pip install --use-pep517 -r requirements/test.txt
        pyver=$(python --version 2>&1 | awk '{print substr($2, 0, 4)}' | awk '{ sub(/[ \t]+$/, ""); print }')
        tox --direct -e "py${pyver//\.}-{std,coverage}"

  build-32bits:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Test with pytest
      run: |
         export COMPOSE_FILE="docker-compose.yml:docker-compose-32bits.yml"
         docker compose build
         docker compose run --rm --entrypoint tox app --direct -e py312-std

